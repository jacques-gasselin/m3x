<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.w3.org/2001/XMLSchema
               http://www.w3.org/2001/XMLSchema.xsd"
           xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
           xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
           elementFormDefault="qualified"
           jaxb:version="2.0"
           version="1.0"
           xml:lang="EN">
    <!-- BEGIN M3X Format Schema -->
    <xs:annotation>
        <xs:documentation>
            M3X Schema for JSR297
            Version 1.0 (DRAFT)

            Licensed under the simplified BSD license.

            ----

            Copyright (c) 2008-2010, Jacques Gasselin de Richebourg
            All rights reserved.

            Redistribution and use in source and binary forms, with or without modification,
            are permitted provided that the following conditions are met:

            - Redistributions of source code must retain the above copyright notice,
            this list of conditions and the following disclaimer.

            - Redistributions in binary form must reproduce the above copyright notice,
            this list of conditions and the following disclaimer in the documentation
            and/or other materials provided with the distribution.

            THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
            AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
            THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
            PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
            CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
            EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
            PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
            OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
            WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
            OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
            ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

        </xs:documentation>
    </xs:annotation>
    <!-- Simple types -->
    <xs:simpleType name="Byte">
        <xs:restriction base="xs:byte"/>
    </xs:simpleType>
    <xs:simpleType name="LayerInt">
        <xs:restriction base="xs:int">
            <xs:minInclusive value="-63"/>
            <xs:maxInclusive value="63"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="UByte">
        <xs:restriction base="xs:unsignedByte"/>
    </xs:simpleType>
    <xs:simpleType name="Int16">
        <xs:restriction base="xs:short"/>
    </xs:simpleType>
    <xs:simpleType name="UInt16">
        <xs:restriction base="xs:unsignedShort"/>
    </xs:simpleType>
    <xs:simpleType name="Int32">
        <xs:restriction base="xs:int"/>
    </xs:simpleType>
    <xs:simpleType name="UInt31">
        <xs:restriction base="xs:int">
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="1073741823"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="UInt32">
        <xs:restriction base="xs:unsignedInt"/>
    </xs:simpleType>
    <xs:simpleType name="Float32">
        <xs:restriction base="xs:float"/>
    </xs:simpleType>
    <xs:simpleType name="Float32GreaterThan0">
        <xs:restriction base="Float32">
            <xs:minExclusive value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Boolean">
        <xs:restriction base="xs:boolean"/>
    </xs:simpleType>
    <xs:simpleType name="Object3DReference">
        <xs:annotation>
            <!--xs:appinfo>
                <jaxb:class ref="Object3D"/>
            </xs:appinfo-->
            <xs:documentation>
                This type is used for referencing other nodes in the same document
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:IDREF"/>
    </xs:simpleType>
    <!-- Aggregate types -->
    <xs:simpleType name="ByteList">
        <xs:annotation>
            <xs:appinfo>
                <jaxb:javaType
                    name="byte[]"
                    parseMethod="m3x.xml.TypeConverter.parseByteArray"
                    printMethod="m3x.xml.TypeConverter.printByteArray"/>
            </xs:appinfo>
        </xs:annotation>
        <xs:list itemType="Byte"/>
    </xs:simpleType>
    <xs:simpleType name="UByteList">
        <xs:annotation>
            <xs:appinfo>
                <jaxb:javaType
                    name="byte[]"
                    parseMethod="m3x.xml.TypeConverter.parseUByteArray"
                    printMethod="m3x.xml.TypeConverter.printUByteArray"/>
            </xs:appinfo>
        </xs:annotation>
        <xs:list itemType="UByte"/>
    </xs:simpleType>
    <xs:simpleType name="Float32List">
        <xs:list itemType="Float32"/>
    </xs:simpleType>
    <xs:simpleType name="UInt16List">
        <xs:annotation>
            <xs:appinfo>
                <jaxb:javaType
                    name="short[]"
                    parseMethod="m3x.xml.TypeConverter.parseUShortArray"
                    printMethod="m3x.xml.TypeConverter.printUShortArray"/>
            </xs:appinfo>
        </xs:annotation>
        <xs:list itemType="UInt16"/>
    </xs:simpleType>
    <xs:simpleType name="Int16List">
        <xs:annotation>
            <xs:appinfo>
                <jaxb:javaType
                    name="short[]"
                    parseMethod="m3x.xml.TypeConverter.parseShortArray"
                    printMethod="m3x.xml.TypeConverter.printShortArray"/>
            </xs:appinfo>
        </xs:annotation>
        <xs:list itemType="Int16"/>
    </xs:simpleType>
    <xs:simpleType name="UInt31List">
        <xs:list itemType="UInt31"/>
    </xs:simpleType>
    <xs:simpleType name="UInt32List">
        <xs:list itemType="UInt32"/>
    </xs:simpleType>
    <xs:simpleType name="Int32List">
        <xs:list itemType="Int32"/>
    </xs:simpleType>
    <!-- Simple Arrays -->
    <xs:simpleType name="Vector3D">
        <xs:restriction base="Float32List">
            <xs:minLength value="3"/>
            <xs:maxLength value="3"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Vector4D">
        <xs:restriction base="Float32List">
            <xs:minLength value="4"/>
            <xs:maxLength value="4"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Matrix">
        <xs:restriction base="Float32List">
            <xs:minLength value="16"/>
            <xs:maxLength value="16"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="ColorRGB">
        <xs:restriction base="UByteList">
            <xs:minLength value="3"/>
            <xs:maxLength value="3"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="ColorRGBA">
        <xs:restriction base="UByteList">
            <xs:minLength value="4"/>
            <xs:maxLength value="4"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- Enumerations -->
    <xs:simpleType name="AnimationTargetType">
        <xs:annotation>
            <xs:documentation>
                The allowed properties for an animation track to target
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="ALPHA">
                <xs:annotation>
                    <xs:documentation>
                        Targets the node ALPHA value of the target. Only valid for Node targets.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="AMBIENT_COLOR">
                <xs:annotation>
                    <xs:documentation>
                        Targets Material ambient color value. Only valid for Material targets.
                        Since M3G 1.0
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ANIMATABILITY">
                <xs:annotation>
                    <xs:documentation>
                        Targets Object3D animatability. Only valid for Object3D targets.
                        Since M3G 2.0
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ANIMATION_POSITION">
                <xs:annotation>
                    <xs:documentation>
                        Targets reference position of controller objects. Only valid for AnimationController targets.
                        Since M3G 2.0
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ANIMATION_SPEED">
                <xs:annotation>
                    <xs:documentation>
                        Targets playback speed of controller objects. Only valid for AnimationController targets.
                        Since M3G 2.0
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ANIMATION_WEIGHT">
                <xs:annotation>
                    <xs:documentation>
                        Targets blending weight of controller objects. Only valid for AnimationController targets.
                        Since M3G 2.0
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BOUNDING_BOX">
                <xs:annotation>
                    <xs:documentation>
                        Targets bounding box information of node objects. Only valid for Node targets.
                        Since M3G 2.0
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BOUNDING_SPHERE">
                <xs:annotation>
                    <xs:documentation>
                        Targets bounding sphere information of node objects. Only valid for Node targets.
                        Since M3G 2.0
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="COLOR">
                <xs:annotation>
                    <xs:documentation>
                        Targets the color of Light, Background, Fog, Texture2D or VertexBuffer objects.
                        Since M3G 1.0
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="CROP">
                <xs:annotation>
                    <xs:documentation>
                        Targets sprite crop information.
                        Deprecated in M3G 2.0
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="DENSITY"/>
            <xs:enumeration value="DEPTH"/>
            <xs:enumeration value="DIFFUSE_COLOR"/>
            <xs:enumeration value="EMISSIVE_COLOR"/>
            <xs:enumeration value="FAR_DISTANCE"/>
            <xs:enumeration value="FIELD_OF_VIEW"/>
            <xs:enumeration value="INTENSITY"/>
            <xs:enumeration value="MORPH_WEIGHTS"/>
            <xs:enumeration value="NEAR_DISTANCE"/>
            <xs:enumeration value="ORIENTATION"/>
            <xs:enumeration value="PICKABILITY"/>
            <xs:enumeration value="POINT_SIZE"/>
            <xs:enumeration value="SCALE"/>
            <xs:enumeration value="SHININESS"/>
            <xs:enumeration value="SPECULAR_COLOR"/>
            <xs:enumeration value="SPOT_ANGLE"/>
            <xs:enumeration value="SPOT_EXPONENT"/>
            <xs:enumeration value="STENCIL"/>
            <xs:enumeration value="TRANSLATION"/>
            <xs:enumeration value="VISIBILITY"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="BackgroundRepeatType">
        <xs:annotation>
            <xs:documentation>
                The allowed modes for the repetition of the image in a background element
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="BORDER">
                <xs:annotation>
                    <xs:documentation>
                        Deprecated in M3G 2.0
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="REPEAT">
                <xs:annotation>
                    <xs:documentation>
                        Deprecated in M3G 2.0
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="BlenderType">
        <xs:annotation>
            <xs:documentation>
                The allowed blend factor constants. They correspond to OpenGL|ES blend modes.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="String">
            <xs:enumeration value="ADD"/>
            <xs:enumeration value="CONSTANT_ALPHA"/>
            <xs:enumeration value="CONSTANT_COLOR"/>
            <xs:enumeration value="DST_ALPHA"/>
            <xs:enumeration value="DST_COLOR"/>
            <xs:enumeration value="ONE"/>
            <xs:enumeration value="ONE_MINUS_CONSTANT_ALPHA"/>
            <xs:enumeration value="ONE_MINUS_CONSTANT_COLOR"/>
            <xs:enumeration value="ONE_MINUS_DST_ALPHA"/>
            <xs:enumeration value="ONE_MINUS_DST_COLOR"/>
            <xs:enumeration value="ONE_MINUS_SRC_ALPHA"/>
            <xs:enumeration value="ONE_MINUS_SRC_COLOR"/>
            <xs:enumeration value="REVERSE_SUBTRACT"/>
            <xs:enumeration value="SRC_ALPHA"/>
            <xs:enumeration value="SRC_ALPHA_SATURATE"/>
            <xs:enumeration value="SRC_COLOR"/>
            <xs:enumeration value="SUBTRACT"/>
            <xs:enumeration value="ZERO"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="CameraProjectionModeType">
        <xs:annotation>
            <xs:documentation>
                The allowed projection matrix modes for a camera element
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="GENERIC"/>
            <xs:enumeration value="PARALLEL"/>
            <xs:enumeration value="PERSPECTIVE"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="CompositingModeBlendType">
        <xs:annotation>
            <xs:documentation>
                The allowed fragment composition modes in a compositing mode element
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="ALPHA"/>
            <xs:enumeration value="ALPHA_ADD"/>
            <xs:enumeration value="ALPHA_PREMULTIPLY"/>
            <xs:enumeration value="ALPHA_DARKEN"/>
            <xs:enumeration value="MODULATE"/>
            <xs:enumeration value="MODULATE_X2"/>
            <xs:enumeration value="MODULATE_INV"/>
            <xs:enumeration value="REPLACE"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="FogEquationType">
        <xs:annotation>
            <xs:documentation>
                The allowed fog equations in a fog element
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="EXPONENTIAL"/>
            <xs:enumeration value="EXPONENTIAL_SQUARED"/>
            <xs:enumeration value="LINEAR"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Image2DColorType">
        <xs:annotation>
            <xs:documentation>
                The allowed color formats of an image element
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="ALPHA"/>
            <xs:enumeration value="LUMINANCE"/>
            <xs:enumeration value="LUMINANCE_ALPHA"/>
            <xs:enumeration value="RGB"/>
            <xs:enumeration value="RGBA"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="KeyframeInterpolationType">
        <xs:annotation>
            <xs:documentation>
                The allowed interpolation modes for a KeyframeSequence element
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="LINEAR"/>
            <xs:enumeration value="SLERP"/>
            <xs:enumeration value="SPLINE"/>
            <xs:enumeration value="SQUAD"/>
            <xs:enumeration value="STEP"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="KeyframePlaybackType">
        <xs:annotation>
            <xs:documentation>
                The allowed playback modes for a KeyframeSequence element
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="CONSTANT"/>
            <xs:enumeration value="LOOP"/>
            <xs:enumeration value="ADDITIVE_LOOP"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="KeyframeEncodingType">
        <xs:annotation>
            <xs:documentation>
                The allowed encoding modes for a KeyframeSequence element
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="FLOAT"/>
            <xs:enumeration value="BYTE"/>
            <xs:enumeration value="SHORT"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="LightType">
        <xs:annotation>
            <xs:documentation>
                The allowed light element types
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="AMBIENT"/>
            <xs:enumeration value="DIRECTIONAL"/>
            <xs:enumeration value="OMNI"/>
            <xs:enumeration value="SPOT"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="MaterialType">
        <xs:annotation>
            <xs:documentation>
                The allowed material element types
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="AMBIENT"/>
            <xs:enumeration value="DIFFUSE"/>
            <xs:enumeration value="EMISSIVE"/>
            <xs:enumeration value="SPECULAR"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="NodeAlignmentType">
        <xs:annotation>
            <xs:documentation>
                The allowed alignment targets and axis for node elements
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="NONE"/>
            <xs:enumeration value="ORIGIN"/>
            <xs:enumeration value="X_AXIS"/>
            <xs:enumeration value="Y_AXIS"/>
            <xs:enumeration value="Z_AXIS"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="PolygonCullingModeType">
        <xs:annotation>
            <xs:documentation>
                The allowed culling modes for polygon mode elements
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="CULL_BACK"/>
            <xs:enumeration value="CULL_FRONT"/>
            <xs:enumeration value="CULL_NONE"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="PolygonShadingModeType">
        <xs:annotation>
            <xs:documentation>
                The allowed shading modes for polygon mode elements
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="SHADE_FLAT"/>
            <xs:enumeration value="SHADE_SMOOTH"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="PolygonWindingModeType">
        <xs:annotation>
            <xs:documentation>
                The allowed winding modes for polygon mode elements
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="WINDING_CCW"/>
            <xs:enumeration value="WINDING_CW"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="TextureMipmapModeType">
        <xs:annotation>
            <xs:documentation>
                The allowed mipmap image filter modes for texture elements
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="FILTER_BASE_LEVEL"/>
            <xs:enumeration value="FILTER_LINEAR"/>
            <xs:enumeration value="FILTER_NEAREST"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="TextureFilterModeType">
        <xs:annotation>
            <xs:documentation>
                The allowed image filter modes for texture elements
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="FILTER_ANISOTROPIC"/>
            <xs:enumeration value="FILTER_LINEAR"/>
            <xs:enumeration value="FILTER_NEAREST"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Texture2DBlendModeType">
        <xs:annotation>
            <xs:documentation>
                The allowed texuture blend modes for texture2d elements
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="FUNC_ADD"/>
            <xs:enumeration value="FUNC_BLEND"/>
            <xs:enumeration value="FUNC_DECAL"/>
            <xs:enumeration value="FUNC_MODULATE"/>
            <xs:enumeration value="FUNC_REPLACE"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Texture2DWrapModeType">
        <xs:annotation>
            <xs:documentation>
                The allowed texuture wrapping modes for texture2d elements
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="WRAP_CLAMP"/>
            <xs:enumeration value="WRAP_REPEAT"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- Complex types -->
    <!-- Root Element -->
    <xs:element name="m3g">
        <xs:annotation>
            <xs:appinfo>enable-xmlns</xs:appinfo>
            <xs:documentation>
                The m3g element is the root of the document that describes
                the content of a JSR184/297 .m3g file
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:annotation>
                    <xs:appinfo>
                        <jaxb:property name="sections"/>
                    </xs:appinfo>
                </xs:annotation>
                <xs:element ref="section" minOccurs="1" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>
                            The m3g element must contain 1 or more sections
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="version"
                          type="xs:string"
                          fixed="2.0"/>
            <xs:attribute name="author"
                          type="xs:string"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="section">
        <xs:complexType>
            <xs:sequence maxOccurs="unbounded">
                <xs:annotation>
                    <xs:appinfo>
                        <jaxb:property name="objects"/>
                    </xs:appinfo>
                </xs:annotation>
                <xs:group ref="RootElementGroup">
                </xs:group>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- Helper types -->
    <xs:group name="RootElementGroup">
        <xs:choice>
            <xs:element ref="AnimationController"/>
            <xs:element ref="AnimationTrack"/>
            <xs:element ref="Appearance"/>
            <xs:element ref="Background"/>
            <xs:element ref="Camera"/>
            <xs:element ref="CompositingMode"/>
            <xs:element ref="Fog"/>
            <xs:element ref="Group"/>
            <xs:element ref="Image2D"/>
            <xs:element ref="KeyframeSequence"/>
            <xs:element ref="Light"/>
            <xs:element ref="Material"/>
            <xs:element ref="Mesh"/>
            <xs:element ref="MorphingMesh"/>
            <xs:element ref="PolygonMode"/>
            <xs:element ref="SkinnedMesh"/>
            <xs:element ref="Texture2D"/>
            <xs:element ref="TriangleStripArray"/>
            <xs:element ref="VertexArray"/>
            <xs:element ref="VertexBuffer"/>
            <xs:element ref="World"/>
        </xs:choice>
    </xs:group>
    <xs:group name="NodeElementGroup">
        <xs:choice>
            <xs:element ref="Camera"/>
            <xs:element ref="Group"/>
            <xs:element ref="Light"/>
            <xs:element ref="Mesh"/>
            <xs:element ref="SkinnedMesh"/>
        </xs:choice>
    </xs:group>
    <xs:group name="AnimationTrackOrInstance">
        <xs:choice>
            <xs:element ref="AnimationTrack"/>
            <xs:element ref="AnimationTrackInstance"/>
        </xs:choice>
    </xs:group>
    <xs:group name="AppearanceOrInstance">
        <xs:choice>
            <xs:element ref="Appearance"/>
            <xs:element ref="AppearanceInstance"/>
        </xs:choice>
    </xs:group>
    <xs:group name="BackgroundOrInstance">
        <xs:choice>
            <xs:element ref="Background"/>
            <xs:element ref="BackgroundInstance"/>
        </xs:choice>
    </xs:group>
    <xs:group name="IndexBufferOrInstance">
        <xs:choice>
            <xs:element ref="TriangleStripArray"/>
            <xs:element ref="TriangleStripArrayInstance"/>
        </xs:choice>
    </xs:group>
    <xs:group name="VertexArrayOrInstance">
        <xs:choice>
            <xs:element ref="VertexArray"/>
            <xs:element ref="VertexArrayInstance"/>
        </xs:choice>
    </xs:group>
    <xs:group name="VertexBufferOrInstance">
        <xs:choice>
            <xs:element ref="VertexBuffer"/>
            <xs:element ref="VertexBufferInstance"/>
        </xs:choice>
    </xs:group>
    <xs:complexType name="ScaleBiasedVertexArray">
        <xs:sequence>
            <xs:element name="bias"
                        default="0.0 0.0 0.0"
                        minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="Float32List">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="3"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:group ref="VertexArrayOrInstance"/>
        </xs:sequence>
        <xs:attribute name="scale"
                      type="Float32"
                      default="1.0"/>
    </xs:complexType>
    <xs:complexType name="MorphTarget">
        <xs:sequence>
            <xs:group ref="VertexBufferOrInstance"/>
        </xs:sequence>
        <xs:attribute name="weight"
                      type="Float32"
                      default="0.0"/>
    </xs:complexType>
    <!-- M3G types -->
    <xs:complexType name="InstanceType" abstract="true">
        <xs:annotation>
            <xs:documentation>
                The Instance type declares a base for M3G instance elements.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="ref" type="Object3DReference" use="required">
            <xs:annotation>
                <xs:documentation>
                    The ref attribute is a text string containing the unique reference id of the target element.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="Object3D" abstract="true">
        <xs:annotation>
            <xs:documentation>
                The Object3D type declares the basic storage of a serializable object for an M3G file.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="AnimationTrackOrInstance">
                    <xs:annotation>
                        <xs:documentation>
                            An object can have any number of animation tracks targeting it.
                        </xs:documentation>
                    </xs:annotation>
                </xs:group>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="id"
                      type="xs:ID">
            <xs:annotation>
                <xs:documentation>
                    The id attribute is a text string containing the unique id of this element.
                    This value must be unique within the instance document. Optional attribute.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="userID"
                      type="Int32"
                      default="0">
            <xs:annotation>
                <xs:documentation>
                    The userID attribute is an integer that can be used by an application to find the object in the
                    scene graph. Optional attribute.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="Transformable" abstract="true">
        <xs:complexContent>
            <xs:extension base="Object3D">
                <xs:sequence>
                    <xs:element name="translation" minOccurs="0" maxOccurs="1"
                                default="0.0 0.0 0.0">
                        <xs:simpleType>
                            <xs:restriction base="Vector3D"/>
                        </xs:simpleType>
                    </xs:element>
                    <xs:element name="orientation" minOccurs="0" maxOccurs="1"
                                default="0.0 0.0 0.0">
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="Vector3D">
                                    <xs:attribute name="angle"
                                                  type="Float32"
                                                  default="0.0"/>
                                </xs:extension>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="scale" minOccurs="0" maxOccurs="1"
                                default="1.0 1.0 1.0">
                        <xs:simpleType>
                            <xs:restriction base="Vector3D"/>
                        </xs:simpleType>
                    </xs:element>
                    <xs:element name="Transform" minOccurs="0" maxOccurs="1">
                        <xs:simpleType>
                            <xs:restriction base="Matrix"/>
                        </xs:simpleType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Node" abstract="true">
        <xs:complexContent>
            <xs:extension base="Transformable">
                <!--<xs:sequence>
                    <xs:element ref="aligment" minOccurs="0" maxOccurs="2"/>
                </xs:sequence>-->
                <xs:attribute name="renderingEnabled" type="Boolean" default="true"/>
                <xs:attribute name="pickingEnabled" type="Boolean" default="true"/>
                <xs:attribute name="alphaFactor" type="Float32" default="1.0"/>
                <xs:attribute name="scope" type="Int32" default="-1"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="GroupType">
        <xs:complexContent>
            <xs:extension base="Node">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:appinfo>
                            <jaxb:property name="childNodes"/>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:group ref="NodeElementGroup"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Image2DType" abstract="true">
        <xs:complexContent>
            <xs:extension base="Object3D">
                <xs:attribute name="format"
                              type="Image2DColorType"
                              use="required"/>
                <xs:attribute name="mutable"
                              type="Boolean"
                              default="false"/>
                <xs:attribute name="width"
                              type="UInt31"
                              use="required"/>
                <xs:attribute name="height"
                              type="UInt31"
                              use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="IndexBuffer">
        <xs:complexContent>
            <xs:extension base="Object3D">
                <xs:sequence>
                    <xs:element name="indices" minOccurs="1" maxOccurs="1">
                        <xs:simpleType>
                            <xs:restriction base="UInt16List">
                                <xs:minLength value="1"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="MeshType">
        <xs:complexContent>
            <xs:extension base="Node">
                <xs:sequence>
                    <xs:group ref="VertexBufferOrInstance"/>
                    <xs:element name="submesh" minOccurs="1" maxOccurs="unbounded">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:group ref="IndexBufferOrInstance"/>
                                <xs:group ref="AppearanceOrInstance" minOccurs="0"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="AnimationController">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Object3D">
                    <xs:attribute name="speed"
                                  type="Float32"
                                  default="1.0"/>
                    <xs:attribute name="weight"
                                  type="Float32"
                                  default="1.0"/>
                    <xs:attribute name="activeIntervalStart"
                                  type="Int32"
                                  default="0"/>
                    <xs:attribute name="activeIntervalEnd"
                                  type="Int32"
                                  default="0"/>
                    <xs:attribute name="referenceSequenceTime"
                                  type="Float32"
                                  default="0.0"/>
                    <xs:attribute name="referenceWorldTime"
                                  type="Int32"
                                  default="0"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="AnimationControllerInstance">
        <xs:complexType>
            <xs:complexContent>
                <xs:restriction base="InstanceType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="AnimationTrack">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Object3D">
                    <xs:sequence>
                        <xs:choice minOccurs="0">
                            <xs:element ref="KeyframeSequence"/>
                            <xs:element ref="KeyframeSequenceInstance"/>
                        </xs:choice>
                        <xs:choice minOccurs="0">
                            <xs:element ref="AnimationController">
                                <xs:annotation><xs:appinfo>
                                    <jaxb:property name="controller"/>
                                </xs:appinfo></xs:annotation>
                            </xs:element>
                            <xs:element ref="AnimationControllerInstance">
                                <xs:annotation><xs:appinfo>
                                    <jaxb:property name="controllerInstance"/>
                                </xs:appinfo></xs:annotation>
                            </xs:element>
                        </xs:choice>
                    </xs:sequence>
                    <xs:attribute name="targetProperty"
                                  type="AnimationTargetType"
                                  use="required"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="AnimationTrackInstance">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="InstanceType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="Appearance">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Object3D">
                    <xs:sequence>
                        <xs:choice minOccurs="0">
                            <xs:element ref="CompositingModeInstance"/>
                            <xs:element ref="CompositingMode"/>
                        </xs:choice>
                        <xs:choice minOccurs="0">
                            <xs:element ref="FogInstance"/>
                            <xs:element ref="Fog"/>
                        </xs:choice>
                        <xs:choice minOccurs="0">
                            <xs:element ref="PolygonModeInstance"/>
                            <xs:element ref="PolygonMode"/>
                        </xs:choice>
                        <xs:choice minOccurs="0">
                            <xs:element ref="MaterialInstance"/>
                            <xs:element ref="Material"/>
                        </xs:choice>
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="Texture2DInstance"/>
                            <xs:element ref="Texture2D"/>
                        </xs:choice>
                    </xs:sequence>
                    <xs:attribute name="layer"
                                  type="LayerInt"
                                  default="0"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="AppearanceInstance">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="InstanceType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="Background">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Object3D">
                    <xs:sequence>
                        <xs:choice minOccurs="0">
                            <xs:element ref="Image2D"/>
                            <xs:element ref="Image2DInstance"/>
                        </xs:choice>
                    </xs:sequence>
                    <xs:attribute name="color"
                                  type="ColorRGBA"
                                  default="0 0 0 255"/>
                    <xs:attribute name="imageModeX"
                                  type="BackgroundRepeatType"
                                  default="BORDER"/>
                    <xs:attribute name="imageModeY"
                                  type="BackgroundRepeatType"
                                  default="BORDER"/>
                    <xs:attribute name="cropX"
                                  type="Int32"/>
                    <xs:attribute name="cropY"
                                  type="Int32"/>
                    <xs:attribute name="cropWidth"
                                  type="Int32"/>
                    <xs:attribute name="cropHeight"
                                  type="Int32"/>
                    <xs:attribute name="depthClearEnabled"
                                  type="Boolean"
                                  default="true"/>
                    <xs:attribute name="colorClearEnabled"
                                  type="Boolean"
                                  default="true"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="BackgroundInstance">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="InstanceType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="CameraProjection">
    </xs:complexType>
    <xs:element name="Camera">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Node">
                    <xs:choice>
                        <xs:element name="generic"
                                    default="1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1">
                            <xs:simpleType>
                                <xs:restriction base="Matrix"/>
                            </xs:simpleType>
                        </xs:element>
                        <xs:element name="parallel">
                            <xs:complexType>
                                <xs:attribute name="fovy"
                                              type="Float32GreaterThan0"
                                              use="required"/>
                                <xs:attribute name="aspectRatio"
                                              type="Float32GreaterThan0"
                                              use="required"/>
                                <xs:attribute name="near"
                                              type="Float32"
                                              use="required"/>
                                <xs:attribute name="far"
                                              type="Float32"
                                              use="required"/>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="perspective">
                            <xs:complexType>
                                <xs:attribute name="fovy" use="required">
                                    <xs:simpleType>
                                        <xs:restriction base="Float32GreaterThan0">
                                            <xs:maxExclusive value="180"/>
                                        </xs:restriction>
                                    </xs:simpleType>
                                </xs:attribute>
                                <xs:attribute name="aspectRatio"
                                              type="Float32GreaterThan0"
                                              use="required"/>
                                <xs:attribute name="near"
                                              type="Float32GreaterThan0"
                                              use="required"/>
                                <xs:attribute name="far"
                                              type="Float32GreaterThan0"
                                              use="required"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:choice>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="CompositingMode">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Object3D">
                    <xs:attribute name="depthTestEnabled"
                                  type="Boolean"
                                  default="true"/>
                    <xs:attribute name="depthWriteEnabled"
                                  type="Boolean"
                                  default="true"/>
                    <xs:attribute name="colorWriteEnabled"
                                  type="Boolean"
                                  default="true"/>
                    <xs:attribute name="alphaWriteEnabled"
                                  type="Boolean"
                                  default="true"/>
                    <xs:attribute name="blending"
                                  type="CompositingModeBlendType"
                                  default="REPLACE"/>
                    <xs:attribute name="alphaThreshold"
                                  type="Float32"
                                  default="0"/>
                    <xs:attribute name="depthOffsetFactor"
                                  type="Float32"
                                  default="0"/>
                    <xs:attribute name="depthOffsetUnits"
                                  type="Float32"
                                  default="0"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="CompositingModeInstance">
        <xs:complexType>
            <xs:complexContent>
                <xs:restriction base="InstanceType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="Fog">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Object3D">
                    <xs:attribute name="color"
                                  type="ColorRGB"
                                  default="0 0 0"/>
                    <xs:attribute name="mode"
                                  type="FogEquationType"
                                  default="LINEAR"/>
                    <xs:attribute name="density"
                                  type="Float32"
                                  default="1"/>
                    <xs:attribute name="near"
                                  type="Float32"
                                  default="0"/>
                    <xs:attribute name="far"
                                  type="Float32"
                                  default="1"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="FogInstance">
        <xs:complexType>
            <xs:complexContent>
                <xs:restriction base="InstanceType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="Group">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="GroupType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="Image2D">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Image2DType">
                    <xs:sequence>
                        <xs:element name="palette" minOccurs="0">
                            <xs:simpleType>
                                <xs:restriction base="UByteList"/>
                            </xs:simpleType>
                        </xs:element>
                        <xs:element name="pixels">
                            <xs:simpleType>
                                <xs:restriction base="UByteList"/>
                            </xs:simpleType>
                        </xs:element>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="Image2DInstance">
        <xs:complexType>
            <xs:complexContent>
                <xs:restriction base="InstanceType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <!--FIXME add definition for ImageCube -->
    <xs:element name="IndexBufferInstance">
        <xs:complexType>
            <xs:complexContent>
                <xs:restriction base="InstanceType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="KeyframeSequence">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Object3D">
                    <xs:sequence>
                        <xs:element name="keytimes">
                            <xs:simpleType>
                                <xs:restriction base="UInt31List"/>
                            </xs:simpleType>
                        </xs:element>
                        <xs:element name="keyframes">
                            <xs:simpleType>
                                <xs:restriction base="Float32List"/>
                            </xs:simpleType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="componentCount"
                                  type="UInt31"
                                  use="required"/>
                    <xs:attribute name="encoding"
                                  type="KeyframeEncodingType"
                                  default="FLOAT"/>
                    <xs:attribute name="duration"
                                  type="UInt31"
                                  use="required"/>
                    <xs:attribute name="interpolation"
                                  type="KeyframeInterpolationType"
                                  use="required"/>
                    <xs:attribute name="validRangeFirst"
                                  type="UInt31"
                                  default="0"/>
                    <xs:attribute name="validRangeLast"
                                  type="UInt31"
                                  default="0"/>
                    <xs:attribute name="repeatMode"
                                  type="KeyframePlaybackType"
                                  default="CONSTANT"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="KeyframeSequenceInstance">
        <xs:complexType>
            <xs:complexContent>
                <xs:restriction base="InstanceType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="Light">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Node">
                    <xs:sequence>
                        <xs:element name="color"
                                    type="ColorRGB"
                                    default="255 255 255"/>
                        <xs:element name="attenuation">
                            <xs:complexType>
                                <xs:attribute name="constant"
                                              type="Float32"
                                              default="1.0"/>
                                <xs:attribute name="linear"
                                              type="Float32"
                                              default="0.0"/>
                                <xs:attribute name="quadratic"
                                              type="Float32"
                                              default="0.0"/>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="spot">
                            <xs:complexType>
                                <xs:attribute name="angle"
                                              type="Float32"
                                              default="45.0"/>
                                <xs:attribute name="exponent"
                                              type="Float32"
                                              default="0.0"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="mode"
                                  type="LightType"
                                  default="DIRECTIONAL"/>
                    <xs:attribute name="intensity"
                                  type="Float32"
                                  default="1.0"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="Material">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Object3D">
                    <xs:sequence>
                        <xs:element name="ambientColor"
                                    type="ColorRGB"
                                    default="51 51 51"
                                    minOccurs="0"/>
                        <xs:element name="diffuseColor"
                                    type="ColorRGBA"
                                    default="204 204 204 255"
                                    minOccurs="0"/>
                        <xs:element name="emissiveColor"
                                    type="ColorRGB"
                                    default="0 0 0"
                                    minOccurs="0"/>
                        <xs:element name="specularColor"
                                    default="0 0 0"
                                    minOccurs="0">
                            <xs:complexType>
                                <xs:simpleContent>
                                    <xs:extension base="ColorRGB">
                                        <xs:attribute name="shininess"
                                                      type="Float32"
                                                      default="0.0"/>
                                    </xs:extension>
                                </xs:simpleContent>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="vertexColorTrackingEnabled"
                                  type="Boolean"
                                  default="false"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="MaterialInstance">
        <xs:complexType>
            <xs:complexContent>
                <xs:restriction base="InstanceType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="Mesh">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="MeshType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="MorphingMesh">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="MeshType">
                    <xs:sequence>
                        <xs:element name="morphTarget" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:complexContent>
                                    <xs:extension base="MorphTarget"/>
                                </xs:complexContent>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="PolygonMode">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Object3D">
                    <xs:attribute name="culling"
                                  type="PolygonCullingModeType"
                                  default="CULL_BACK"/>
                    <xs:attribute name="shading"
                                  type="PolygonShadingModeType"
                                  default="SHADE_SMOOTH"/>
                    <xs:attribute name="winding"
                                  type="PolygonWindingModeType"
                                  default="WINDING_CCW"/>
                    <xs:attribute name="twoSidedLightingEnabled"
                                  type="Boolean"
                                  default="false"/>
                    <xs:attribute name="localCameraLightingEnabled"
                                  type="Boolean"
                                  default="false"/>
                    <xs:attribute name="perspectiveCorrectionEnabled"
                                  type="Boolean"
                                  default="false"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="PolygonModeInstance">
        <xs:complexType>
            <xs:complexContent>
                <xs:restriction base="InstanceType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="SkinnedMesh">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="MeshType">
                    <xs:sequence>
                        <xs:element name="skeleton" type="GroupType"/>
                        <xs:element name="bone" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:appinfo>
                                    <jaxb:property name="bones"/>
                                </xs:appinfo>
                            </xs:annotation>
                            <xs:complexType>
                                <xs:complexContent>
                                    <xs:extension base="InstanceType">
                                        <xs:attribute name="firstVertex"
                                                      type="UInt31"
                                                      use="required"/>
                                        <xs:attribute name="vertexCount"
                                                      type="UInt31"
                                                      use="required"/>
                                        <xs:attribute name="weight"
                                                      type="Int32"
                                                      use="required"/>
                                    </xs:extension>
                                </xs:complexContent>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="Texture2D">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Transformable">
                    <xs:sequence>
                        <xs:choice minOccurs="0">
                            <xs:element ref="Image2D"/>
                            <xs:element ref="Image2DInstance"/>
                        </xs:choice>
                    </xs:sequence>
                    <xs:attribute name="blendColor"
                                  type="ColorRGB"
                                  default="0 0 0"/>
                    <xs:attribute name="blending"
                                  type="Texture2DBlendModeType"
                                  default="FUNC_MODULATE"/>
                    <xs:attribute name="wrappingS"
                                  type="Texture2DWrapModeType"
                                  default="WRAP_REPEAT"/>
                    <xs:attribute name="wrappingT"
                                  type="Texture2DWrapModeType"
                                  default="WRAP_REPEAT"/>
                    <xs:attribute name="levelFilter"
                                  type="TextureMipmapModeType"
                                  default="FILTER_BASE_LEVEL"/>
                    <xs:attribute name="imageFilter"
                                  type="TextureFilterModeType"
                                  default="FILTER_NEAREST"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="Texture2DInstance">
        <xs:complexType>
            <xs:complexContent>
                <xs:restriction base="InstanceType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="TriangleStripArray">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="IndexBuffer">
                    <xs:sequence>
                        <xs:element name="stripLengths">
                            <xs:simpleType>
                                <xs:restriction base="UInt16List"/>
                            </xs:simpleType>
                        </xs:element>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="TriangleStripArrayInstance">
        <xs:complexType>
            <xs:complexContent>
                <xs:restriction base="InstanceType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="VertexArray">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Object3D">
                    <xs:choice>
                        <xs:element name="byteComponents">
                            <xs:simpleType>
                                <xs:restriction base="ByteList">
                                    <xs:minLength value="1"/>
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:element>
                        <xs:element name="shortComponents">
                            <xs:simpleType>
                                <xs:restriction base="Int16List">
                                    <xs:minLength value="1"/>
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:element>
                    </xs:choice>
                    <xs:attribute name="componentCount"
                                  use="required">
                         <xs:simpleType>
                             <xs:restriction base="Byte">
                                 <xs:minInclusive value="1"/>
                                 <xs:maxInclusive value="4"/>
                             </xs:restriction>
                         </xs:simpleType>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="VertexArrayInstance">
        <xs:complexType>
            <xs:complexContent>
                <xs:restriction base="InstanceType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="VertexBuffer">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Object3D">
                    <xs:sequence>
                        <xs:element name="positions">
                            <xs:complexType>
                                <xs:complexContent>
                                    <xs:extension base="ScaleBiasedVertexArray"/>
                                </xs:complexContent>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="normals" minOccurs="0">
                            <xs:complexType>
                                <xs:group ref="VertexArrayOrInstance"/>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="colors" minOccurs="0">
                            <xs:complexType>
                                <xs:group ref="VertexArrayOrInstance"/>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="texcoords" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:complexContent>
                                    <xs:extension base="ScaleBiasedVertexArray"/>
                                </xs:complexContent>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="defaultColor"
                                  type="ColorRGBA"
                                  default="255 255 255 255"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="VertexBufferInstance">
        <xs:complexType>
            <xs:complexContent>
                <xs:restriction base="InstanceType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="World">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="GroupType">
                    <xs:sequence>
                        <xs:group ref="BackgroundOrInstance"/>
                    </xs:sequence>
                    <xs:attribute name="activeCamera"
                                  type="Object3DReference"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
</xs:schema>

