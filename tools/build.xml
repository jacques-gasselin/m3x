<?xml version="1.0" encoding="UTF-8"?>
<project name="m3x.tools"
         default="build"
         basedir=".">
    <description>Builds the tool packages for the M3X project.</description>

    <!-- Adding these suggested by maxgilead to allow use of this build.xml file directly. -->
    <property name="schema.dir" location="${basedir}/../schema"/>
    <property name="lib.dir" location="${basedir}/../lib"/>
    <property name="checkstyle.policy" location="${basedir}/../checkstyle-policy-5.0.xml"/>

    <property name="docs.dir" location="${basedir}/docs"/>
    <property name="res.dir" location="${basedir}/res"/>
    <property name="res.xml.dir" location="${res.dir}/xml"/>
    <property name="src.dir" location="${basedir}/src"/>
    <property name="src.m3x.dir" location="${src.dir}/m3x"/>
    <property name="test.dir" location="${basedir}/test"/>
    <property name="test.build.dir" location="${test.dir}/build"/>
    <property name="src.m3x.xml.dir" location="${src.m3x.dir}/xml"/>
    <property name="build.dir" location="${basedir}/build"/>
    <property name="build.src.dir" location="${build.dir}/src"/>
    <property name="build.src.m3x.dir" location="${build.src.dir}/m3x"/>
    <property name="build.src.m3x.xml.dir" location="${build.src.m3x.dir}/xml"/>
    <property name="build.m3x.dir" location="${build.dir}/m3x"/>
    <property name="build.m3x.xml.dir" location="${build.m3x.dir}/xml"/>
    <property name="dist.dir" location="${basedir}/dist"/>

    <property name="m3x.xml.package" value="m3x.xml"/>
    <property name="m3x.m3g.package" value="m3x.m3g"/>
    <property name="m3x.collada.package" value="m3x.collada"/>
    <property name="m3x.translation.package" value="m3x.translation"/>

    <target name="pre-build">
        <mkdir dir="${build.m3x.xml.dir}"/>
        <mkdir dir="${build.src.m3x.xml.dir}"/>
        <mkdir dir="${test.build.dir}"/>
    </target>
    
    <target name="xjc-typedef">
        <taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
            <classpath>
                <fileset dir="${lib.dir}/jaxb">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </taskdef>        
    </target>

    <target name="xml-build" depends="xjc-typedef">
        <echo>XJC on m3x schema</echo>
        <xjc package="${m3x.xml.package}"
             destdir="${build.src.dir}">
            <schema file="${schema.dir}/m3x.xsd"/>
            <produces dir="${build.src.dir}/m3x/xml">
                <include name="*.java"/>
                <exclude name="Deserializer.java"/>
                <exclude name="Serializer.java"/>
                <exclude name="TypeConverter.java"/>
            </produces>
        </xjc>
        <echo>XJC on collada schema</echo>
        <xjc package="${m3x.collada.package}"
             destdir="${build.src.dir}"
             extension="true">
            <schema file="${schema.dir}/collada.xsd"/>
            <produces dir="${build.src.dir}/m3x/collada">
                <include name="*.java"/>
                <exclude name="BaseObject.java"/>
                <exclude name="BaseObjectDatabase.java"/>
                <exclude name="Deserializer.java"/>
            </produces>
        </xjc>
        <copy todir="${build.dir}" preservelastmodified="true">
            <fileset dir="${build.src.dir}">
              <include name="**/jaxb.properties"/>
            </fileset>
        </copy>
        <!--add the schema to the build path-->
        <copy todir="${build.dir}/m3x/xml" preservelastmodified="true"
              file="${schema.dir}/m3x.xsd"/>
        <!--add the schema to the build path-->
        <copy todir="${build.dir}/m3x/collada" preservelastmodified="true"
              file="${schema.dir}/collada.xsd"/>
    </target>
    
    <target name="clean">
        <mkdir dir="${test.build.dir}" />
        <delete>
            <fileset dir="${test.build.dir}" includes="**/*.class"/>
            <fileset dir="${build.dir}" includes="**/*.class"/>
            <fileset dir="${build.dir}" includes="**/*.java"/>
            <fileset dir="${dist.dir}" includes="**/*.jar"/>
            <fileset dir="${dist.dir}" includes="**/*.py"/>
        </delete>
    </target>

    <target name="uptodate-src">
        <uptodate property="src.uptodate" targetfile="${basedir}/.uptodate-src">
            <srcfiles dir="${src.dir}" includes="**/*.java"/>
        </uptodate>
        <touch file="${basedir}/.uptodate-src"/>
    </target>

    <target name="checkstyle-src" unless="src.uptodate">
        <taskdef resource="checkstyletask.properties"
                 classpath="${lib.dir}/checkstyle-all-5.0.jar"/>
        <checkstyle failOnViolation="false"
                    config="${checkstyle.policy}">
            <classpath>
                <fileset dir="${lib.dir}"/>
            </classpath>
            <formatter type="plain"/>
            <fileset dir="${src.dir}" defaultexcludes="yes">
                <exclude name="**/*.html"/>
            </fileset>
            <property key="checkstyle.cache.file"
                      file="${checkstyle.policy}.cachefile"/>
        </checkstyle>
    </target>
    
    <target name="build-src" depends="pre-build, uptodate-src, checkstyle-src, xml-build">
        <depend srcdir="${build.src.dir}"
                destdir="${build.dir}"
                cache="depcache"
                closure="yes"/>
        <depend srcdir="${src.dir}"
                destdir="${build.dir}"
                cache="depcache"
                closure="yes"/>
        <javac destdir="${build.dir}"
               fork="true"
               debug="true"
               source="1.8"
               includeantruntime="false">
            <src>
                <pathelement location="${build.src.dir}"/>
                <pathelement location="${src.dir}"/>
            </src>
            <include name="**/collada/*.java"/>
            <include name="**/xml/*.java"/>
            <classpath>
                <fileset dir="${lib.dir}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javac>
        <javac destdir="${build.dir}"
               fork="true"
               debug="true"
               source="1.8"
               includeantruntime="false">
            <compilerarg value="-Xlint"/>
            <src>
                <pathelement location="${src.dir}"/>
            </src>
            <include name="**/*.java"/>
            <classpath>
                <fileset dir="${lib.dir}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javac>
        <!--build the distributable jar-->
        <mkdir dir="${dist.dir}"/>
        <jar destfile="${dist.dir}/m3x.jar"
             basedir="${build.dir}">
             <exclude name="src/**/*"/>
        </jar>
        <!--compile the tests-->
        <mkdir dir="${test.build.dir}" />
        <depend srcdir="${test.dir}"
                destdir="${test.build.dir}"
                cache="depcache"
                closure="yes"/>
        <javac destdir="${test.build.dir}"
               fork="true"
               debug="true"
               source="1.8"
               includeantruntime="false">
            <compilerarg value="-Xlint"/>
            <src path="${test.dir}"/>
            <include name="**/*.java"/>
            <classpath>
                <fileset dir="${lib.dir}">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="${dist.dir}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javac>
    </target>
    
    <target name="javadoc" depends="pre-build, xml-build">
        <javadoc destdir="${docs.dir}/api"
                 author="true"
                 version="true"
                 use="true"
                 includenosourcepackages="true"
                 windowtitle="m3x Application Programming Interface"
                 Overview="${src.dir}/overview.html">
            <!--taglet name="net.sourceforge.taglets.Taglets"
                    path="${lib.dir}/taglets/taglets.jar"/-->
            <arg value="-notimestamp"/>
            <classpath>
                <fileset dir="${lib.dir}"/>
            </classpath>
            <packageset dir="${src.dir}" defaultexcludes="yes"/>
            <packageset dir="${build.src.dir}" defaultexcludes="yes"/>
            <doctitle><![CDATA[<h1>m3x Application Programming Interface</h1>]]></doctitle>
            <bottom><![CDATA[<i>Copyright &#169; Jacques Gasselin de Richebourg. All Rights Reserved.</i>]]></bottom>
            <group title="XML Packages" packages="${m3x.xml.package}"/>
            <group title="M3G Packages" packages="${m3x.m3g.package}, ${m3x.m3g.package}.*"/>
            <group title="Translation Packages" packages="${m3x.translation.package}, ${m3x.translation.package}.*"/>
            <link href="http://java.sun.com/developer/technicalArticles/WebServices/jaxb/"/>
            <link href="http://jcp.org/en/jsr/detail?id=297"/>
        </javadoc>       
    </target>

    <target name="test"
            description="runs the test target in all the subfolders"
            depends="build-src">
        <!-- run unit tests -->
        <ant antfile="build.xml"
             dir="${test.dir}"
             inheritall="true"
             inheritrefs="true"
             target="test"/>
    </target>

    <target name="build"
            description="builds the tools"
            depends="build-src, install-blender-plugins">

    </target>

    <target name="check-os">
        <condition property="os.macosx" value="true">
            <os family="mac"/>
        </condition>
    </target>
    
    <target name="install-blender-plugins"
            description="Installs import and export plugins for Blender"
            depends="check-os, install-blender-plugins-macosx">
        <copy todir="${dist.dir}/blender/scripts"
              preservelastmodified="true">
            <fileset dir="${basedir}/blender">
                <include name="*.py"/>
            </fileset>
        </copy>
    </target>

    <target name="install-blender-plugins-macosx"
            description="Installs import and export plugins for Blender on MacOSX"
            if="os.macosx">
        <!-- For Blender 2.4* -->
        <copy todir="${user.home}/.blender/scripts"
              preservelastmodified="true">
            <fileset dir="${basedir}/blender">
                <include name="*.py"/>
            </fileset>
        </copy>
        <!-- For Blender 2.76 -->
        <copy todir="${user.home}/Library/Application Support/Blender/2.76/scripts/addons"
              preservelastmodified="true">
            <fileset dir="${basedir}/blender/addons">
                <include name="**/*.py"/>
            </fileset>
        </copy>
        <!-- For Blender 2.79 -->
        <copy todir="${user.home}/Library/Application Support/Blender/2.79/scripts/addons"
              preservelastmodified="true">
            <fileset dir="${basedir}/blender/addons">
                <include name="**/*.py"/>
            </fileset>
        </copy>
    </target>

</project>
