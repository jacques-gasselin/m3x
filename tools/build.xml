<?xml version="1.0" encoding="UTF-8"?>
<project name="m3x.tools"
         default="build"
         basedir=".">
    <description>Builds the tool packages for the M3X project.</description>

    <property name="docs.dir" location="${basedir}/docs"/>
    <property name="res.dir" location="${basedir}/res"/>
    <property name="res.xml.dir" location="${res.dir}/xml"/>
    <property name="src.dir" location="${basedir}/src"/>
    <property name="src.m3x.dir" location="${src.dir}/m3x"/>
    <property name="test.dir" location="${basedir}/test"/>
    <property name="src.m3x.xml.dir" location="${src.m3x.dir}/xml"/>
    <property name="build.dir" location="${basedir}/build"/>
    <property name="build.src.dir" location="${build.dir}/src"/>
    <property name="build.src.m3x.dir" location="${build.src.dir}/m3x"/>
    <property name="build.src.m3x.xml.dir" location="${build.src.m3x.dir}/xml"/>
    <property name="build.test.dir" location="${build.dir}/test"/>
    <property name="build.m3x.dir" location="${build.dir}/m3x"/>
    <property name="build.m3x.xml.dir" location="${build.m3x.dir}/xml"/>
    <property name="dist.dir" location="${basedir}/dist"/>

    <property name="m3x.xml.package" value="m3x.xml"/>
    <property name="m3x.m3g.package" value="m3x.m3g"/>
    <property name="m3x.translation.package" value="m3x.translation"/>

    <property name="checkstyle.policy" location="${basedir}/checkstyle-policy.xml"/>
    
    <target name="pre-build">
        <mkdir dir="${build.m3x.xml.dir}"/>
        <mkdir dir="${build.src.m3x.xml.dir}"/>
    </target>
    
    <target name="xjc-typedef">
        <taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
            <classpath>
                <pathelement location="${lib.dir}/jaxb-xjc.jar"/>
            </classpath>
        </taskdef>        
    </target>

    <target name="xml-build" depends="xjc-typedef">
        <xjc package="${m3x.xml.package}"
             destdir="${build.src.dir}">
            <arg value="-extension"/>
            <arg value="-xmlschema"/>
            <schema file="${schema.dir}/m3x.xsd"/>
            <depends file="${schema.dir}/m3x.xsd"/>
            <produces dir="${build.src.m3x.xml.dir}"/>
        </xjc>
        <depend srcdir="${build.src.dir}"
                destdir="${build.dir}"
                cache="depcache"
                closure="yes"/>
        <javac destdir="${build.dir}"
               fork="true">
            <!--compilerarg value="-Xlint:unchecked"/-->
            <src path="${build.src.dir}"/>
            <classpath>
                <fileset dir="${lib.dir}"/>
            </classpath>
        </javac>
    </target>
    
    <target name="clean">
        <delete>
            <fileset dir="${build.dir}" includes="**/*.class"/>
            <fileset dir="${build.dir}" includes="**/*.java"/>
            <fileset dir="${dist.dir}" includes="**/*.jar"/>
        </delete>
    </target>

    <target name="build-src" depends="pre-build, xml-build">
        <taskdef resource="checkstyletask.properties"
                 classpath="${lib.dir}/checkstyle-all-4.4.jar"/>        
        <checkstyle failOnViolation="false"
                    config="${checkstyle.policy}">
            <classpath>
                <fileset dir="${lib.dir}"/>
            </classpath>
            <formatter type="plain"/>
            <fileset dir="${src.dir}" defaultexcludes="yes">
                <exclude name="**/*.html"/>
            </fileset>
        </checkstyle>
        <depend srcdir="${src.dir}"
                destdir="${build.dir}"
                cache="depcache"
                closure="yes"/>
        <javac destdir="${build.dir}"
               fork="true">
            <!--compilerarg value="-Xlint:unchecked"/-->
            <src path="${src.dir}"/>
            <classpath>
                <fileset dir="${lib.dir}"/>
            </classpath>
        </javac>
        <!--compile the tests-->
        <depend srcdir="${test.dir}"
                destdir="${build.dir}"
                cache="depcache"
                closure="yes"/>
        <javac destdir="${build.dir}"
               fork="true">
            <!--compilerarg value="-Xlint:unchecked"/-->
            <src path="${test.dir}"/>
            <classpath>
                <fileset dir="${lib.dir}"/>
            </classpath>
        </javac>
        <!--build the distributable jar-->
        <mkdir dir="${dist.dir}"/>
        <jar destfile="${dist.dir}/m3x.jar"
             basedir="${build.dir}">
             <exclude name="src/**/*"/>
             <exclude name="**/Test*.class"/>
             <exclude name="**/Demo*.class"/>
             <exclude name="**/*Test.class"/>
             <exclude name="**/*Demo.class"/>
        </jar>
    </target>
    
    <target name="javadoc" depends="pre-build, xml-build">
        <javadoc destdir="${docs.dir}/api"
                 author="true"
                 version="true"
                 use="true"
                 windowtitle="m3x Application Programming Interface">
            <classpath>
                <fileset dir="${lib.dir}"/>
            </classpath>
            <fileset dir="${src.dir}" defaultexcludes="yes">
                <exclude name="**/*.html"/>
            </fileset>
            <fileset dir="${build.src.dir}" defaultexcludes="yes">
                <exclude name="**/*.html"/>
            </fileset>            <doctitle><![CDATA[<h1>m3x Application Programming Interface</h1>]]></doctitle>
            <bottom><![CDATA[<i>Copyright &#169; Jacques Gasselin de Richebourg. All Rights Reserved.</i>]]></bottom>
            <group title="XML Packages" packages="${m3x.xml.package}"/>
            <group title="M3G Packages" packages="${m3x.m3g.package}, ${m3x.m3g.package}.*"/>
            <group title="Translation Packages" packages="${m3x.translation.package}, ${m3x.translation.package}.*"/>
            <link href="http://java.sun.com/developer/technicalArticles/WebServices/jaxb/"/>
            <link href="http://jcp.org/en/jsr/detail?id=297"/>
        </javadoc>       
    </target>

    <target name="test"
            description="runs the test target in all the subfolders"
            depends="build-src">
        <!-- run unit tests -->
        <ant antfile="build.xml"
             dir="${test.dir}"
             inheritall="true"
             inheritrefs="true"
             target="test"/>
    </target>

    <target name="build"
            description="builds and tests the tools"
            depends="test">

    </target>
</project>
